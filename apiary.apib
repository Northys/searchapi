FORMAT: 1A
HOST: https://apis.uloz.to/

# Ulož.to API

First draft of Ulož.to API, with support for user login, logout and file search.

Security keys used thoughout the API

+ X-Auth-Token

        This key is issued for every application. Each application should have exactly one, unique auth token.

+ user_token

        User token is used to prove to API that your application has access to user's account. User token is obtained by validating login information through API /session.
        
+ X-Checksum 

        Security checksum to sign your request with, assuring API that request was not tampered with.


# Group Root

## API Root [/]

This resource does not have any attributes. Instead it offers the initial
API affordances in the form of the links in the JSON body.

It is recommend to follow the “url” link values,
[Link](https://tools.ietf.org/html/rfc5988) or Location headers where
applicable to retrieve resources. Instead of constructing your own URLs,
to keep your client decoupled from implementation details.


## Retrieve entry points [GET]

+ Request

    + Header
    
            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

        {
            "search_url": "/search/v1",
            "session_url": "/session/v1",
            "userinfo_url": "/user/v1",
            "app_version_url": "/app-version/v1",
            "files_url": "/v1/files",
            "userfolders_list_url": "/v1/user/{user_token}/folders",
            "userfolders_url": "/v1/user/{user_token}/folders/{folder_id}"
        }
        
+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application. 

    + Header
            
            WWW-Authenticate: X-Auth-Token
        
    + Body
            
            {
                "result": "error",
                "message": "Invalid authorization token."
            }
        
# Group Sessions


## Authentication [/session/v1]

### Authenticate user [PUT]

We need to authenticate user to get a session token. Session token is later used to identify a user.

`device_id` parameter is optional. Maximum length 50 characters.

+ Request (application/json)

    + Header
    
            X-Auth-Token: 3284hedgf237ruewhfvgi2378
            
    + Body

            {
                "login": "medvidek",
                "password": "123456",
                "device_id": "23489efgih2841"
            }

+ Response 201 (application/json)

    User session created.

    + Headers
        
            ETag: "asdiu328reewhfikw" - Session token
            
    + Body
            
            {
                "token_id": "asdiu328reewhfikw",
                "result": "ok",
                "message": null
            }

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application. 

    + Header
            
            WWW-Authenticate: X-Auth-Token
        
    + Body
            
            {
                "result": "error",
                "message": "Invalid authorization token."
            }
        
        
+ Response 412 (application/json)

    Unable to create user session.

    + Body

            {
                "token": null,
                "result": "error",
                "message": "Wrong password or invalid username"
            }

+ Response 429 (application/json)

        Too many requests - slow down, try again later.

    + Body

            {
                "token": null,
                "result": "error"
                "message": "Too many requests. Please slow down a little and try again later."
            }

## User sessions [/session/v1/{user_token}]

+ Parameters

    + user_token: asdiu328reewhfikw (string, optional) - Identifier of session
        

### Delete user session [DELETE]

Effectively a logout.

+ Request

    + Header
    
            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    + Headers

            ETag: "asdiu328reewhfikw"

    + Body

            {
                "result": "ok",
                "message": null
            }

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application. 

    + Header
            
            WWW-Authenticate: X-Auth-Token
        
    + Body
            
            {
                "result": "error",
                "message": "Invalid authorization token."
            }
        

# Group User

## Basic user info [/user/v1/{user_token}]

+ Parameters
    + user_token: asdiu328reewhfikw (string, optional) - User session token, obtained by authentication

### Get user data [GET]

+ Request 

    + Header
    
            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    Basic user info. Credit amount is measured in kilobytes [kB].

    + Body
            
            {
                "result": "ok",
                "message": null
                "user_id": 666,
                "login": "medvidek",
                "credit": 413967
            }

+ Response 401 (application/json)

    Invalid X-Auth-Token or user_token provided , could not authorize your application. Use WWW-Authenticate header value to find out which part of authentication is wrong (X-Auth-Token or user_token).

    + Header
            
            WWW-Authenticate: X-Auth-Token
        
    + Body
            
            {
                "result": "error",
                "message": "Invalid authorization token."
            }
        

## Users folders [/v1/user/{user_token}/folders{?tree}]

### Get all users folders [GET]

List of all user's folders.

+ Folder data format
    + id: `25792` (int) - Folder id (`0` is root folder for each user)
    + name: `"My very own folder"` (string) - Folder's name/caption
    + visibility (enum) - Either `public` or `private`
    + public_url: `"/soubory/my_username/folder_slug"` (string) - Url to folder's public view (`null` when not available)
    + is_password_protected (boolean) - Public folder, other users need to provide password to see contents of this folder
    + type (enum) - One of (`root`, `gallery`, `normal`, `videoshare`, `favorites`, `documents`, `audios`, `videos`)
    + parent_folder_id: `0` (int) - Folder id
    + children (collection of folders) - this field is present if requesting folders in `tree` format

+ Parameters
    + user_token: "asdiu328reewhfikw" (string) - Identification of an user, obtained through /session entry point
    + tree (bool, optional) - If set to `true`, folder entities will be returned in the tree-like structure, with each folder entity containing its children in the `children` field.
        + Default: false

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    + Body

            {
                "items": [
                    {
                        "id": 0,
                        "name": "Root",
                        "visibility": "private",
                        "public_url": null,
                        "is_password_protected": false,
                        "type": "root",
                        "parent_folder_id": null,
                        "children": [
                            {
                                "id": 25792,
                                "name": "Dokumenty",
                                "visibility": "public",
                                "public_url": "/soubory/my_username/folder_slug",
                                "is_password_protected": false,
                                "type": "documents",
                                "parent_folder_id": 0,
                                "children": []
                            },
                            {
                                "id": 25794,
                                "name": "Oblíbené",
                                "visibility": "public",
                                "public_url": "/soubory/my_username/folder_slug",
                                "is_password_protected": false,
                                "type": "favorites",
                                "parent_folder_id": 0,
                                "children": []
                            }
                        ]
                    }
                ]
            }

+ Response 400 (application/json)

    Invalid parameter value

    + Body

            {
                "result": "error",
                "message": "Invalid tree parameter value."
            }
            
            
+ Response 401 (application/json)

    Invalid X-Auth-Token , could not authorize your application. Use correct WWW-Authenticate header.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Body

            {
                "result": "error",
                "message": "Invalid authorization token."
            }


### Create new folder [PUT]

+ `type` is always `normal`
+ `public_url` is provided only for public folders
+ `password` may be omitted or set to null if creating folder without password protection


+ Request (application/json)

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

    + Body

            {
                "name": "Cute folder name",
                "visibility": "public",
                "password": null,
                "parent_folder_id": 100
            }

+ Response 201 (application/json)

    + Body

            {
                "id": 45678,
                "name": "Cute folder name",
                "visibility": "public",
                "public_url": "/m/soubory/my_username/cute_folder_name",
                "is_password_protected": false,
                "type": "normal",
                "parent_folder_id": 100
            }


+ Response 400 (application/json)

    Unable to create folder - wrong data submitted.

    + Body

            {
                "result": "error",
                "message": "Unable to create folder.",
                "items": [
                    {
                        "data-element": "name",
                        "message": "Name cannot be empty."
                    },
                    {
                        "data-element": "parent_folder_id",
                        "message": "You must be owner of parent folder."
                    }
                ]
            }

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application. Use correct WWW-Authenticate header.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Body

            {
                "result": "error",
                "message": "Invalid authorization token."
            }
            
## Files in users folders [/v1/user/{user_token}/folder/{folder_id}{?page,limit,sort,search_query,filetype,include_password_protected}]

+ Parameters
    + user_token: asdiu328reewhfikw (required, string) - User token of folder owner
    + page: 1 (optional, int) - Fetch specific page number
        Default: 1
    + limit: 20 (optional, int) - Limit the result set to <limit> items
        Default: 20
    + sort: name (optional, string) - Sorting, one of [name; -name; created; -created; size; -size; extension; -extension]. This option may not be used without specifying `query`.
        Default: name
    + `search_query` (string, optional) - Return only files with names containing search_query
    + filetype: video (optional, string) - Filter found files, value might be one of [video; audio; image; document]. If empty, search will return all filetypes.
    + `include_password_protected`: false (optional, boolean) - If set to true, will include password protected files in the search results.
        Default: true


### Get users files in folder [GET]

+ File entity
    + id: "x2EfXNKe"
    + slug: "/x2EfXNKe/tera-"
    + realm: ulozto (string, required) - Enum, one of [ulozto; pornfile].
    + name: Poznávačka rostliny.pptx (string, required) - Name of the file
    + filesize: 158367932 (number, required) - filesize in bytes
    + extension: pptx (string, required) - file extension
    + rating: 0 (number, required) - File rating (sum of thumbs up and thumbs down)
    + content_type: '' (string, required) - Enum  ('video', 'audio', 'image', 'archive', 'document', '')
    + password_protected_archive: false (boolean, required) - IF the file is archive, AND that archive is password protected. This file can be downloaded.
    + password_protected_file: false (boolean, required) - You must know correct password to access the file detail or to download this file .
    + media_info: Array(object) - key:value array. Key defines size and format of thumbnail, value is a list of images.
    + visibility (enum) - Either "public" or "private"
    + duration: 296 (int, optional) - Length of the video/audio in seconds (if videofile)
    + streamable: false (boolean) - TRUE for streamable videofile

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    + Headers

            Link: </v1/user/{user_token}/folder/{folder_id}?page=1>;rel=self,</v1/user/{user_token}/folder/{folder_id}?page=2>;rel=next

    + Body

             {
                "metadata": {
                    "page": 1,
                    "limit": 20,
                    "page_count": 12,
                    "items_count": 236
                },
                "items": [
                    {
                        "id": "ugRqqug",
                        "slug": "/xugRqqug/vedma"
                        "url": "/xugRqqug/vedma-z-weiry-1-cast-pdf-pro-epub-pdf",
                        "name": "Vedma z Weiry 1 část_pdf_pro_ePub.pdf",
                        "realm": "ulozto",
                        "extension": "pdf",
                        "duration": null,
                        "filesize": 10241024,
                        "rating": 0,
                        "content_type": "",
                        "password_protected_archive": false,
                        "password_protected_file": false,
                        "media_info": {
                            "s160x120": [ "http://img4.uloz.to/ul3/images/ico/pdf.png" ],
                            "s640x360": [ "http://img4.uloz.to/ul3/images/ico/pdf.png" ]
                        }
                    },
                    {
                        "id": "BwuV4rR",
                        "slug": "/xBwuV4rR/pozna",
                        "url": "/xBwuV4rR/poznavacka-rostliny-pptx",
                        "name": "Poznávačka rostliny.pptx",
                        "realm": "pornfile",
                        "extension": "pptx",
                        "duration": null,
                        "filesize": 158367932,
                        "rating": 0,
                        "content_type": "",
                        "password_protected_archive": false,
                        "password_protected_file": false,
                        "media_info": {
                            "s160x120": [ "http://img4.uloz.to/ul3/images/ico/unknown.png" ],
                            "s640x360": [ "http://img4.uloz.to/ul3/images/ico/unknown.png" ]
                        }
                    },
                ]
             }


     
# Group File

## File detail info [/v1/files/{slug}{?password,user_token,upload_token}]

File detail data

+ Parameters
    + slug: `/x2EfXNKe/tera-online-prikaz-na-stahovanie-na-steam-txt` (string, required) - Full uloz.to slug is basically the file url
    + user_token: `asdiu328reewhfikw` (string, optional) - To access user's private file, you need to identify yourself with his token
    + upload_token: `skesfwkfjsnfsefk:123` (string, optional) - To write access to anonymous file in upload process, you need to use upload token
    + password: `123macko` (string, optional) - To access password protected file, you need to provide the file's password (password is not necessary to access own files, password does not allow writing file not my own)

### Get file detail info [GET]

+ File entity
    + id: "x2EfXNKe"
    + slug: "/xugRqqug/vedma"
    + url: "/xugRqqug/vedma-z-weiry-1-cast-pdf-pro-epub-pdf",
    + realm: ulozto (string, required) - Enum, one of [ulozto; pornfile].
    + name: Poznávačka rostliny.pptx (string, required) - Name of the file
    + description: this could potentially be a rather long description (string, optional) - File description
    + filesize: 158367932 (number, required) - filesize in bytes
    + extension: pptx (string, required) - file extension
    + rating: 0 (number, required) - File rating (sum of thumbs up and thumbs down)
    + password_protected_archive: false (boolean, required) - IF the file is archive, AND that archive is password protected. This file can be downloaded.
    + password_protected_file: false (boolean, required) - You must know correct password to access the file detail or to download this file .
    + media_info: Array(object) - key:value array. Key defines size and format of thumbnail, value is a list of images.
    + visibility (enum) - Either "public" or "private"
    + status (enum) - Either "ok" (regular file) or "incomplete" (file is in process of uploading)
    + download_links
        + free: "http://uloz.to/free-download-link" (string, required) - Url for free download
        + vip: "http://uloz.to/vip-download-link" (string, optional) - Url for vip download, this url is present ONLY if you provided user_token and this user has enough credit for download.
    + stream_links
        + vip: "http://uloz.to/vip-stream-link" (string, optional) - Url for vip stream, this url is present ONLY if you provided user_token, this user has enough credit for download and the file is streamable.
    + format
        + width: 320 (int, optional) - If available, width of video/image
        + height: 200 (int, optional) - If available, height of video/image
        + duration: 296 (int, optional) - Length of the video/audio in seconds
        + content_type: video (enum, optional) - Enum  ('video', 'audio', 'image', 'archive', 'document', '')
        + streamable: false (boolean) - TRUE for streamable videofile
    + attributes
        + archive_files - to be specified
        + video_data - to be specified
        + audio_data - to be specified

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)
    + Body

            {
                "id": "ugRqqug",
                "slug": "/ugRqqug/vedma",
                "name": "Vedma z Weiry 1 část_pdf_pro_ePub.pdf",
                "extension": "pdf",
                "url": "/xugRqqug/vedma-z-weiry-1-cast-pdf-pro-epub-pdf",
                "realm": "ulozto",
                "filesize": 10241024,
                "rating": 0,
                "password_protected_archive": false,
                "password_protected_file": false,
                "visibility": "public",
                "status": "ok",
                "media_info": {
                    "s160x120": [ "http://img4.uloz.to/ul3/images/ico/pdf.png" ],
                    "s640x360": [ "http://img4.uloz.to/ul3/images/ico/pdf.png" ]
                },
                "download_links": {
                    "free": "http://uloz.to/free-download-link",
                    "vip": "http://uloz.to/vip-download-link"
                },
                "stream_links": {
                    "vip": "http://uloz.to/vip-stream-link"
                },
                "format": {
                    "width": 1024,
                    "height": 768,
                    "duration": 1598,
                    "content_type": "video",
                    "streamable": false
                }
            }

+ Response 401 (application/json)

    Invalid X-Auth-Token, password or user_token, could not authorize your request.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Body

            {
                "result": "error",
                "message": "Invalid authorization token."
            }

### Update file properties [PATCH]

Update file properties. 
All properties are optional, every property present in request body will be changed.
Property set to `null` will be removed or set to default value where possible.
Updating any property may affect other properties (e.g., changing `name` may change `url` and `realm`).

+ Update entity
    + `name`: (string, not empty) - Change name of the file
    + `description`: (string, default empty) - Change file description
    + `visibility`: (enum, default `public`) - Either `public` or `private`
    + `password`: (string) - Set password protection
    + `is_searchable`: (boolean, default `true`) - Set to false to hide file from public search
    + `expire_download`: (int, `0..2^24`) - Restrict public access to file by number of downloads remaining
    + `expire_time`: (date) - Restrict public access to file by date
    + `folder_id`: (int, optional) - Assign file to folder (`0` = root folder, file and folder owner must match)

+ Request (application/json)

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

    + Body
    
            {
                "name": "New file name.jpg",
                "description": "New\tfile\ndescription.",
                "visibility": "private",
                "password": "heslo",
                "is_searchable": true,
                "expire_download": 10,
                "expire_time": "2000-01-01",
                "folder_id": 0
            }

+ Response 200 (application/json)
    + Body

            {
                "id": "ugRqqug",
                "slug": "/ugRqqug/vedma",
                "name": "Vedma z Weiry 1 část_pdf_pro_ePub.pdf",
                "extension": "pdf",
                "url": "/xugRqqug/vedma-z-weiry-1-cast-pdf-pro-epub-pdf",
                "realm": "ulozto",
                "filesize": 10241024,
                "rating": 0,
                "password_protected_archive": false,
                "password_protected_file": false,
                "visibility": "public",
                "status": "ok",
                "media_info": {
                    "s160x120": [ "http://img4.uloz.to/ul3/images/ico/pdf.png" ],
                    "s640x360": [ "http://img4.uloz.to/ul3/images/ico/pdf.png" ]
                },
                "download_links": {
                    "free": "http://uloz.to/free-download-link",
                    "vip": "http://uloz.to/vip-download-link"
                },
                "stream_links": {
                    "vip": "http://uloz.to/vip-stream-link"
                },
                "format": {
                    "width": 1024,
                    "height": 768,
                    "duration": 1598,
                    "content_type": "video",
                    "streamable": false
                }
            }

+ Response 401 (application/json)

    Invalid `X-Auth-Token`, `user_token` or `upload_token`, could not authorize your request.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Body

            {
                "result": "error",
                "message": "Invalid authorization token."
            }

+ Response 400 (application/json)

    Unable to update file - wrong data submitted.

    + Body

            {
                "result": "error",
                "message": "Unable to update file.",
                "items": [
                    {
                        "data-element": "name",
                        "message": "Name cannot be empty."
                    },
                    {
                        "data-element": "folder_id",
                        "message": "File owner must own the folder too."
                    },
                    {
                        "data-element": "visibility",
                        "message": "Public visibility is forbidden for this file."
                    }
                ]
            }

### Delete file [DELETE]

Delete your file.

+ Request

    + Header
    
            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 204 (application/json)

    Delete successfull
    
    + Header

+ Response 401 (application/json)

    Invalid `X-Auth-Token`, `user_token` or `upload_token`, could not authorize your request.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Body

            {
                "result": "error",
                "message": "Invalid authorization token."
            }
            

# Group Upload

## Upload batch commit [/v1/upload/batch/{batch_uuid}/commit{?user_token}]

+ Parameters
    + batch_uuid: `d5ec97a3-cb15-46d3-8f5f-5125378a22c9` (string, required) - Upload batch unique ID
    + user_token: `asdiu328reewhfikw` (string, optional) - To access user's upload batch, you need to identify yourself with his token

### Upload batch commit [PUT]

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    Commit succesfull 

    + Body
    
            {
                "after_upload_url": "/sem/nahrano/d5ec97a3-cb15-46d3-8f5f-5125378a22c9"
            }

+ Response 400 (application/json)

    Upload batch is not in valid state for commit.

    + Body

            {
                "result": "error",
                "message": "Unable to commit now. Wait for file uploading completion or abort it."
            }

+ Response 401 (application/json)

    Invalid `X-Auth-Token` or `user_token`, could not authorize your request.
    
    + Header
    
            WWW-Authenticate: X-Auth-Token
    
    + Body
    
            {
                "result": "error",
                "message": "Invalid authorization token."
            }
            
+ Response 404

    Unknown `batch_uuid`
    
    + Body


## Upload file progress [/v1/upload/batch/{batch_uuid}/file/{batch_file_id}]

+ Parameters
    + batch_uuid: `d5ec97a3-cb15-46d3-8f5f-5125378a22c9` (string, required) - Upload batch unique ID
    + batch_file_id: `10` (int, required) - File ID in upload batch (i.e., ordinal number of file in upload batch)

### Get file upload status [GET]

+ Status entity
    + `status`: (enum) - Either `uploading`, `done`or `error`
    + `received`: (int) - Number of bytes recieved on server
    + `size`: (int) - File size in bytes
    + `slug`: (string, optional) - File slug, available only when `status = done`
    
+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    + Body
    
            {
                "status": "uploading",
                "received": 2791412
                "size": 843344997
                "slug": null
            }

+ Response 401 (application/json)

    Invalid `X-Auth-Token` provided. Use correct `WWW-Authenticate` header.
    
    + Header
    
            WWW-Authenticate: X-Auth-Token
    
    + Body
    
            {
                "result": "error",
                "message": "Invalid authorization token."
            }

+ Response 404

    Unknown `batch_uuid` or `batch_file_id`
    
    + Body
    

# Group Search

## Search [/search/v1/{query}{?page,limit,user_token,sort,filetype,include_password_protected}]

+ Parameters
    + query: zahradniceni rostliny (optional, string) - Searched query. If query is empty, search will return random files in random order.
    + user_token: asdiu328reewhfikw (required, string) - Perform search as a frontend user (instead of anonymous search)
    + page: 1 (optional, int) - Fetch specific page number
        Default: 1
    + limit: 20 (optional, int) - Limit the result set to <limit> items
        Default: 20
    + sort: weight (optional, string) - Sorting, one of [weight, created; ratings; size; -size]. This option may not be used without specifying `query`.
        Default: weight
    + filetype: video (optional, string) - Filter found files, value might be one of [video; audio; image; document]. If empty, search will return all filetypes.
    + include_password_protected: false (optional, boolean) - If set to true, will include password protected files in the search results.
        Default: true

### Get search result [GET]

Perform search request. Response consists of two parts
- metadata with informaton about the search (time, page, items count etc.)
- list of search items (list of entries, one for each file)



+ Request

        X-Checksum is a security checksum, assuring API that request was not tampered with.
        X-Timestamp is the time the request was created.
        

    + Header
    
            X-Auth-Token: 3284hedgf237ruewhfvgi2378
            X-Checksum: 93bd5933f956598617c73c2864b00c00
            X-Timestamp: 1436957691

+ Response 200 (application/json)
    + Headers
    
            Link: </search/zahradniceni rostliny>;rel=self,</search/zahradniceni rostliny>;rel=next,</search/zahradniceni rostliny>;rel=previous

    + Attributes (object)
        + url: http://www.uloz.to/xBwuV4rR/poznavacka-rostliny-pptx (string, required) - Detail url, can be used as a file identifier
        + realm: ulozto (string, required) - Enum, one of [ulozto; pornfile]. 
        + name: Poznávačka rostliny.pptx (string, required) - Name of the file
        + filesize: 158367932 (number, required) - filesize in bytes
        + extension: pptx (string, required) - file extension
        + rating: 0 (number, required) - File rating (sum of thumbs up and thumbs down)
        + content_type: '' (string, required) - Enum  ('video', 'audio', 'image', 'archive', 'document', '')
        + password_protected_archive: false (boolean, required) - IF the file is archive, AND that archive is password protected. This file can be downloaded.
        + password_protected_file: false (boolean, required) - You must know correct password to access the file detail or to download this file .
        + media_info: Array(object) - key:value array. Key defines size and format of thumbnail, value is a list of images.

    + Body
    
             {
                "result": "ok",
                "message": null,
                "metadata": {
                    "query": "zahradniceni rostliny",
                    "displayed_query": "zahradniceni rostliny",
                    "run_at": "2014-11-11T08:40:51.620Z",
                    "page": 1,
                    "limit": 20,
                    "page_count": 12,
                    "items_count": 236
                },
                "items": {
                    "exact": [
                        {
                            "id": "ugRqqug",
                            "name": "Vedma z Weiry 1 část_pdf_pro_ePub.pdf",
                            "extension": "pdf",
                            "duration": null,
                            "url": "/xugRqqug/vedma-z-weiry-1-cast-pdf-pro-epub-pdf",
                            "filesize": 10241024,
                            "rating": 0,
                            "content_type": "",
                            "password_protected_archive": false,
                            "password_protected_file": false,
                            "media_info": {
                                "s160x120": [ "http://img4.uloz.to/ul3/images/ico/pdf.png" ],
                                "s640x360": [ "http://img4.uloz.to/ul3/images/ico/pdf.png" ]
                            }
                        },
                        {
                            "id": "BwuV4rR", 
                            "name": "Poznávačka rostliny.pptx",
                            "extension": "pptx",
                            "duration": null,
                            "url": "/xBwuV4rR/poznavacka-rostliny-pptx",
                            "filesize": 158367932,
                            "rating": 0,
                            "content_type": "",
                            "password_protected_archive": false,
                            "password_protected_file": false,
                            "media_info": {
                                "s160x120": [ "http://img4.uloz.to/ul3/images/ico/unknown.png" ],
                                "s640x360": [ "http://img4.uloz.to/ul3/images/ico/unknown.png" ]
                            }
                        },
                        {
                            "id": "gLEqCrR",
                            "name": "Tajomstvo kruhu čarodejníc - USA 2011 dab. SK diel 11 - U17 -.avi",
                            "extension": "avi",
                            "duration": 12345,
                            "url": "/xgLEqCrR/tajomstvo-kruhu-carodejnic-usa-2011-dab-sk-diel-11-u17-avi",
                            "filesize": 622180912,
                            "rating": 2,
                            "content_type": "video",
                            "password_protected_archive": false,
                            "password_protected_file": false,
                            "media_info": {
                                "s160x120": [ "http://videoth.uloz.to/g/L/E/xgLEqCrR.160x120.1.jpg", "http://static.uloz.to/cdn/X/T/Y/xXTYmuMs.160x120.1.jpg", "http://static.uloz.to/cdn/X/T/Y/xXTYmuMs.160x120.2.jpg" ],
                                "s640x360": [ "http://videoth.uloz.to/g/L/E/xgLEqCrR.640x360.2.jpg", "http://videoth.uloz.to/g/L/E/xgLEqCrR.640x360.2.jpg", "http://videoth.uloz.to/g/L/E/xgLEqCrR.640x360.2.jpg", "http://videoth.uloz.to/g/L/E/xgLEqCrR.640x360.2.jpg" ]
                            }
                        }
                    ],
                    "partial": [
                         {
                            "id": "XnKDmxF",
                            "name": "Terminator.Genisys.2015.CAM.HUN.MD-JLX.avi",
                            "extension": "avi",
                            "duration": 3323223,
                            "url": "/xXnKDmxF/terminator-genisys-2015-cam-hun-md-jlx-avi",
                            "filesize": 622180912,
                            "rating": 2,
                            "content_type": "video",
                            "password_protected_archive": false,
                            "password_protected_file": false,
                            "media_info": {
                                "s160x120": [ "http://videoth.uloz.to/X/n/K/xXnKDmxF.160x120.1.jpg", "http://static.uloz.to/cdn/X/T/Y/xXTYmuMs.160x120.1.jpg", "http://static.uloz.to/cdn/X/T/Y/xXTYmuMs.160x120.2.jpg" ],
                                "s640x360": [ "http://videoth.uloz.to/X/n/K/xXnKDmxF.640x360.1.jpg", "http://videoth.uloz.to/X/n/K/xXnKDmxF.640x360.1.jpg", "http://videoth.uloz.to/X/n/K/xXnKDmxF.640x360.1.jpg", "http://videoth.uloz.to/X/n/K/xXnKDmxF.640x360.1.jpg" ]
                            }
                        },
                        {
                            "id": "XTYmuMs",
                            "name": "239-Ženatý se závazky - Married with Children (1987)(CZ).avi",
                            "extension": "avi",
                            "duration": 3432435,
                            "url": "/xXTYmuMs/linder-bandolero-avi",
                            "filesize": 622180912,
                            "rating": -2,
                            "content_type": "video",
                            "password_protected_archive": false,
                            "password_protected_file": false,
                            "media_info": {
                                "s160x120": [ "http://static.uloz.to/cdn/X/T/Y/xXTYmuMs.160x120.0.jpg", "http://static.uloz.to/cdn/X/T/Y/xXTYmuMs.160x120.1.jpg", "http://static.uloz.to/cdn/X/T/Y/xXTYmuMs.160x120.2.jpg" ],
                                "s640x360": [ "http://static.uloz.to/cdn/2/H/o/x2HoPV7N.640x360.0.jpg", "http://static.uloz.to/cdn/2/H/o/x2HoPV7N.640x360.0.jpg", "http://static.uloz.to/cdn/2/H/o/x2HoPV7N.640x360.0.jpg", "http://static.uloz.to/cdn/2/H/o/x2HoPV7N.640x360.0.jpg" ]
                            }
                        },
                        {
                            "id": "zXhJZzx",
                            "name": "Sila osudu - novela Mex. - Špan. 2011 HD dab.SK - diel 065 - FU17 -.avi",
                            "extension": "avi",
                            "duration": 9454954,
                            "url": "/xzXhJZzx/sila-osudu-novela-mex-span-2011-hd-dab-sk-diel-065-fu17-avi",
                            "filesize": 622180912,
                            "rating": 2,
                            "content_type": "video",
                            "password_protected_archive": false,
                            "password_protected_file": false,
                            "media_info": {
                                "s160x120": [ "http://videoth.uloz.to/z/X/h/xzXhJZzx.160x120.0.jpg", "http://static.uloz.to/cdn/X/T/Y/xXTYmuMs.160x120.1.jpg", "http://static.uloz.to/cdn/X/T/Y/xXTYmuMs.160x120.2.jpg" ],
                                "s640x360": [ "http://videoth.uloz.to/z/X/h/xzXhJZzx.640x360.2.jpg", "http://videoth.uloz.to/z/X/h/xzXhJZzx.640x360.2.jpg", "http://videoth.uloz.to/z/X/h/xzXhJZzx.640x360.2.jpg", "http://videoth.uloz.to/z/X/h/xzXhJZzx.640x360.2.jpg" ]
                            }
                        }
                    ]
                }
            }
            
+ Response 429 (application/json)

    + Body
    
            {
                "result": "error",
                "message": "Too many requests. Please slow down a little and try again later."
            }

            
+ Response 412 (application/json)

    Wrong request parameter. For e.g. `limit` less than 1 or more than 100, unsupported filter etc.

    + Body
    
            {
                "result": "error",
                "message": "Wrong request parameter.",
                "extra": "Parameter limit must be between <1, 100>"
            }

            
+ Response 404 (application/json)

    Requested response does not exist. Maybe you are trying to access `page` parameter beyond the existing results?
    
    + Header
            
    + Body
            
            {
                "result": "error",
                "message": "Requested page index is out of range for given query.",
                "page_count": 1,
                "items_count": 8
            }

    
+ Response 401 (application/json)

    Invalid X-Auth-Token or user_token provided , could not authorize your application. Use WWW-Authenticate header value to find out which part of authentication is wrong (X-Auth-Token or user_token).

    + Header
            
            WWW-Authenticate: X-Auth-Token
        
    + Body
            
            {
                "result": "error",
                "message": "Invalid authorization token."
            }

# Group Application info        
            
## Aplication version [/app-version/v1/{app_name}]

This entry point is not secured, and is publicly accessible.

+ Parameters
    + app_name: `ulozto-android` (required, string) - Uniquely identifies application.

### Get version info [GET]

+ Response 200 (application/json)

    + Attributes (object)
    
        + version.internal: `10097` (number, required) - Internal version, should at least loosely follow some kind of semantic versioning (SEMVER)
        + version.displayed: `1.1` (string, required) - Version number to show to users
        + url: http://uloz.to/path/to/app (string, required) - Url to download last version
        + checksum: 217acf325c6012c1a50828e74626b945 (string, required) - MD5 checksum of the last version 
        

    + Body
            
            {
                "result": "ok",
                "message": null,
                "version": {
                    "internal": 21,
                    "displayed": "1.1"
                },
                "url": "http://utapi.jaitner.cz/app-debug.apk",
                "checksum": "4db14073c820e324c499f446627a3eec"
            }

+ Response 404 (application/json)

    Unknown application name (app_name)
    
    + Body 
    
            {
                "result": "error",
                "message": "Unknown application."
            }